from aiogram import Bot, Dispatcher, Router
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message, User
from aiogram_dialog import Dialog, DialogManager, StartMode, Window, setup_dialogs
from aiogram_dialog.widgets.kbd import Button, Row, Url, Column, Multiselect, Radio
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from environs import Env

env = Env()
env.read_env()

BOT_TOKEN = env('BOT_TOKEN')

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

router = Router()


class StartSG(StatesGroup):
    start = State()

class SecondDialogSG(StatesGroup):
    start = State()

class LearningDialogSG(StatesGroup):
    start = State()


class PythonLearningDialogSG(StatesGroup):
    window_1 = State()

class PlusesLearningDialogSG(StatesGroup):
    window_1 = State()

class GolangLearningDialogSG(StatesGroup):
    window_1 = State()

class PythonBackendDialogSG(StatesGroup):
    window_1 = State()
    window_2 = State()
    window_3 = State()
    window_4 = State()

class PythonAIdevDialogSG(StatesGroup):
    window_1 = State()
    window_2 = State()
    window_3 = State()
    window_4 = State()

class PythonDataEngDialogSG(StatesGroup):
    window_1 = State()
    window_2 = State()
    window_3 = State()
    window_4 = State()



async def go_start(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=StartSG.start, mode=StartMode.RESET_STACK)


async def start_second(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=SecondDialogSG.start)


async def learning_button_started(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=LearningDialogSG.start)


async def help_button_clicked(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
        await callback.message.answer_sticker('CAACAgIAAxkBAAEMj3Fmp9b-aBkIQ38RhudhhslpJWsILQACZwADQDHADXhtfVrKFwABjjUE')
        await callback.message.answer('<b><code>–°–æ–∑–¥–∞—Ç–µ–ª—å</code>\n @aboutwaste3d</b> - –ù–∏–∫–æ–ª–∞–π –°–æ—Ä–æ–∫–æ–ª–µ—Ç–æ–≤\n\n<code>Python developer | DevOps engineer</code>\n\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º/—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –∫ –Ω–µ–º—É')

async def python_learn(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=PythonLearningDialogSG.window_1)

async def plusses_learn(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=PlusesLearningDialogSG.window_1)

async def golang_learn(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=GolangLearningDialogSG.window_1)

async def python_go_back(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.back()

async def python_go_next(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.next()
    
async def python_backend_cources(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=PythonBackendDialogSG.window_1)

async def python_aidev_course(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=PythonAIdevDialogSG.window_1)

async def python_data_engineering_course(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await dialog_manager.start(state=PythonDataEngDialogSG.window_1)


async def username_getter(event_from_user: User, **kwargs):
    return {'username': event_from_user.username}


start_dialog = Dialog(
    Window(
        Format('<b>–ü—Ä–∏–≤–µ—Ç, {username} üëã</b>\n'),
        Const('–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, —á—Ç–æ —Ç—ã –Ω–µ <code>—Ä–æ–±–æ—Ç</code>'),
        Button(Const('‚ö°Ô∏è –Ø –Ω–µ —Ä–æ–±–æ—Ç'), id='go_second', on_click=start_second),
        getter=username_getter,
        state=StartSG.start
    ),
)



second_dialog = Dialog(
    Window(
        Const('<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>'),
        Button(text=Const('Roadmaps'), id = 'learn_button', on_click = learning_button_started),
        Button(text=Const('–ü–æ–º–æ—â—å'), id = 'help_button', on_click = help_button_clicked),
        state=SecondDialogSG.start
    ),
)

learning_dialog = Dialog(
    Window(
        Const('<code>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è <b>roadmap</b></code>'),
        Column(
            Button(text=Const('üêç Python'), id = 'python_learn', on_click=python_learn),
            Button(text=Const('üí´ C++'), id = 'pluss_learn', on_click=plusses_learn),
            Button(text=Const('ü¶´ Golang'), id = 'go_learn', on_click=golang_learn),
        ),
        Button(text=Const('–ù–∞–∑–∞–¥'), id = 'back_button_menu', on_click=start_second),
        state = LearningDialogSG.start,
    ),
)

python_learn_dialog = Dialog(
    Window(
        Const('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é'),
        Button(Const('Backend'), id='backend_python_course', on_click=python_backend_cources),
        Button(Const('Data Science'), id = 'ML_developer_python_course', on_click=python_aidev_course),
        Button(Const('Data engineering'), id = 'data_eng_course', on_click=python_data_engineering_course),
        state=PythonLearningDialogSG.window_1
    )
)

python_backend_dialog = Dialog(
    Window(
        Const('–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π Git'),
        Url(Const('Git'), url=Const('https://www.youtube.com/watch?v=O00FTZDxD0o'), id='git_py'),
        Button(Const('‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥'), id = 'python_backend_next_1', on_click=python_go_next),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_backend_1_menu', on_click=learning_button_started),
        state=PythonBackendDialogSG.window_1
    ),
    Window(
        Const('–û—Å–Ω–æ–≤—ã python + –û–û–ü'),
        Url(Const('–ë–∞–∑–∞ python'), url=Const('https://code-basics.com/ru/languages/python'), id = 'baza_py'),
        Url(Const('–û–û–ü'),url=Const('https://www.youtube.com/watch?v=Z7AY41tE-3U&list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E'), id = 'oop_py'),
        Row(
            Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_backend_back_2', on_click=python_go_back),
            Button(Const("‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥"), id = 'python_backend_next_2', on_click=python_go_next),
        ),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_backend_2_menu', on_click=learning_button_started),
        state=PythonBackendDialogSG.window_2
    ),
    Window(
        Const('Python FastAPI | Django'),
        Url(Const('Fast API'), url=Const('https://www.youtube.com/playlist?list=PLeLN0qH0-mCVQKZ8-W1LhxDcVlWtTALCS'), id='fastapi_py'),
        Url(Const('Django'), url=Const('https://www.youtube.com/watch?v=wOjicN2OXbs&list=PLBheEHDcG7-nyRX-kMT2jyudahDQ-A-Ss'), id='django_py'),
        Row(
            Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_backend_back_3', on_click=python_go_back),
            Button(Const("‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥"), id = 'python_backend_next_3', on_click=python_go_next),
        ),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_backend_3_menu', on_click=learning_button_started),
        state=PythonBackendDialogSG.window_3
    ),
    Window(
        Const('–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?'),
        Format('–í–æ—Ç —Ç—ã –∏ –ø—Ä–æ—á–∏—Ç–∞–ª –ø–µ—Ä–≤—ã–π <code>—Ä–æ–∞–¥–º–∞–ø</code>, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –º–Ω–æ–π –≤ —Ä–∞–º–∫–∞—Ö —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n–ù–∞–≤–µ—Ä–Ω—è–∫–∞ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å: "–∞ —á—Ç–æ –∂–µ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?"\n\n–ö–æ–Ω–µ—á–Ω–æ –∂–µ –∏–∑—É—á–∞—Ç—å <b>—Å–µ—Ç—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–∑–Ω—É—Ç—Ä–∏</b>, <b>—Ä–∞–∑–Ω—ã–µ –ë–î</b> –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –≤ —Å–µ–±–µ <b>—Å–æ—Ñ—Ç-—Å–∫–∏–ª–ª—ã</b>.\n\n–ú–æ–≥—É –ª–∏—à—å –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å —Å–≤–æ–π <code>–º–∏–Ω–∏-–¢–ì–ö</code>, –≤ –∫–æ—Ç–æ—Ä—ã–π —è –±—É–¥—É —Å–ª–∏–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.'),
        Url(Const('–¢–ì–ö —Å –∫—É—Ä—Å–∞–º–∏'), url=Const('https://t.me/waste3dinfo'), id='tgk_mini'),
        Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_backend_next_4', on_click=python_go_back),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_backend_4_menu', on_click=learning_button_started),
        state=PythonBackendDialogSG.window_4,
        getter=username_getter,
    ),
)

python_data_science_dialog = Dialog(
   Window(
        Const('–ë–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏\n–°—É—â–µ—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É—Ä—Å–æ–≤ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ\n—Ä–∞—Å—Å–∫–∞–∂—É—Ç —Ç–µ–±–µ –æ–± –æ—Å–Ω–æ–≤–∞—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –º–∞—Ç. –∞–Ω–∞–ª–∏–∑–∞,\n—è –ø–æ—Å–æ–≤–µ—Ç—É—é —ç—Ç–æ –≤–∏–¥–µ–æ —Å —é—Ç—É–±–∞'),
        Url(Const('–ì–¥–µ –∏ –∫–∞–∫ —É—á–∏—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫—É ?'), url=Const('https://www.youtube.com/watch?v=6ajAbghWzrs&t=147s'), id='math_py'),
        Button(Const('‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥'), id = 'python_ai_next_1', on_click=python_go_next),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_ai_1_menu', on_click=learning_button_started),
        state=PythonAIdevDialogSG.window_1
    ),
    Window(
        Const('<code>–û—Å–Ω–æ–≤—ã python + –û–û–ü.</code> Python –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö\n–≤—ã–±–æ—Ä–æ–≤ —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –¥–∞—Ç–∞ —Å–∞–π–Ω—Ç–∏—Å—Ç–æ–≤. –û–Ω –ø–æ–ª—å–∑—É–µ—Ç—Å—è <b>–Ω–∞–∏–±–æ–ª—å—à–µ–π –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å—é</b>\n\n(–î–ê, –ò –ó–î–ï–°–¨ –ü–ò–¢–û–ù üêç)'),
        Url(Const('–ë–∞–∑–∞ python'), url=Const('https://code-basics.com/ru/languages/python'), id = 'baza_py'),
        Url(Const('–û–û–ü'),url=Const('https://www.youtube.com/watch?v=Z7AY41tE-3U&list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E'), id = 'oop_py'),
        Row(
            Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_ai_back_2', on_click=python_go_back),
            Button(Const("‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥"), id = 'python_ai_next_2', on_click=python_go_next),
        ),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_ai_2_menu', on_click=learning_button_started),
        state=PythonAIdevDialogSG.window_2
    ),
    Window(
        Const('<code>Pandas, NumPy, Scipy</code> - —Å–∞–º—ã–π —á–∞—Å—Ç—ã–π –≤—ã–±–æ—Ä —Å—Ä–µ–¥–∏ —Å–∞–π–Ω—Ç–∏—Å—Ç–æ–≤.\n–≠—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤ <b>–õ–Æ–ë–û–ú</b> —Å–ª—É—á–∞–µ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã.\n\n–ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º üá¨üáß'),
        Url(Const('Pandas'), url=Const('https://www.youtube.com/watch?v=ZyhVh-qRZPA&list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS'), id='pandas_py'),
        Url(Const('NumPy (–∞—Ä–∞–±—Å–∫–∏–π –∫—É—Ä—Å üë≥üèª)'), url=Const('https://www.youtube.com/watch?v=5-5CrLmf2vk&list=PLIA_seGogbkGDYq-dnVCsELEIq_7HK7Ca'), id='num_py'),
        Url(Const('Scipy (github tutorial)'), url=Const('https://cs231n.github.io/python-numpy-tutorial/#scipy'), id = 'scipy_py'),
        Row(
            Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_ai_back_3', on_click=python_go_back),
            Button(Const("‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥"), id = 'python_ai_next_3', on_click=python_go_next),
        ),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_ai_3_menu', on_click=learning_button_started),
        state=PythonAIdevDialogSG.window_3
    ),
    Window(
       Const('–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?'),
        Format('–í–æ—Ç —Ç—ã –∏ –ø—Ä–æ—á–∏—Ç–∞–ª –≤–æ—Ç–æ—Ä–æ–π <code>—Ä–æ–∞–¥–º–∞–ø</code>, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –º–Ω–æ–π –≤ —Ä–∞–º–∫–∞—Ö —ç—Ç–æ–≥–æ –±–æ—Ç–∞. (—Å—á–µ—Ç –∑–∞–∫–æ–Ω—á–∏–ª—Å—è)\n–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?\n\n –ü–æ—á–∏—Ç–∞—Ç—å –µ—â–µ —Ä–æ–∞–¥–º–∞–ø—ã, –∏–∑—É—á–∏—Ç—å <b>–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</b>, <b>pytorch</b> –∏ —É—á–∏—Ç—å <b>–ú–ê–¢–ï–ú–ê–¢–ò–ö–£!</b>.\n\n–ò, –¥–∞, –æ–ø—è—Ç—å –≤–ø–∏—Ö–Ω—É —Å–≤–æ–π <code>–º–∏–Ω–∏-–¢–ì–ö</code>, –≤ –∫–æ—Ç–æ—Ä—ã–π —è –±—É–¥—É —Å–ª–∏–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ—É.'),
        Url(Const('–¢–ì–ö —Å –∫—É—Ä—Å–∞–º–∏'), url=Const('https://t.me/waste3dinfo'), id='tgk_mini'),
        Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_ai_next_4', on_click=python_go_back),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_ai_4_menu', on_click=learning_button_started),
        state=PythonAIdevDialogSG.window_4,
        getter=username_getter,
    ),
)

python_data_eng_dialog = Dialog(
    Window(
        Const('Python, python, python! üêç'),
        Url(Const('PYTHON –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –î–ê–ù–ù–´–•? (eng)'), url=Const('https://www.youtube.com/playlist?list=PL5-da3qGB5ICCsgW1IHykI9tC7mXXhxmr'), id='data_eng_py'),
        Button(Const('‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥'), id = 'python_deng_next_1', on_click=python_go_next),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_deng_1_menu', on_click=learning_button_started),
        state=PythonDataEngDialogSG.window_1
    ),
    Window(
        Const('Apache (spark + hadoop), —Ö–∑ —á—Ç–æ —ç—Ç–æ ü•∑'),
        Row(
            Url(Const('Apache Spark ü¶à (Docs)'), url = Const('https://spark.apache.org/docs/latest/'), id = 'apache_py'),
            Url(Const('Apache Hadoop (Docs)'), url = Const('https://hadoop.apache.org/docs/stable/'), id = 'apache_had_py'),
        ),
        Row(
            Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_dataeng_back_2', on_click=python_go_back),
            Button(Const("‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥"), id = 'python_dataeng_next_2', on_click=python_go_next),
        ),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_dataeng_2_menu', on_click=learning_button_started),
        state=PythonDataEngDialogSG.window_2
    ),
    Window(
        Const('–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (PostgreSQL, MySQL...)'),
        Row(
            Url(text=Const('PostgreSQL'), url=Const('https://www.postgresqltutorial.com/'), id='postgres_py'),
            Url(text=Const('MySQL'), url = Const('https://www.mysqltutorial.org/'), id = 'my_sql_eng'),
            Url(Const('MongoDB'), url = Const('https://university.mongodb.com/'), id = 'mongodb'),
        ),
        Row(
            Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_dataeng_back_3', on_click=python_go_back),
            Button(Const("‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥"), id = 'python_dataeng_next_3', on_click=python_go_next),
        ),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_dataeng_3_menu', on_click=learning_button_started),
        state=PythonDataEngDialogSG.window_3
    ),
    Window(
        Const('–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?\n\n–°–æ–≤–µ—Ç—É—é –ø–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Ä–æ–∞–¥–º–∞–ø (https://github.com/shnoh-hann/fo-data-engineer-roadmap). –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫—Å—Ç–∞—Ç–∏, —è –±—Ä–∞–ª –∏–∑ –Ω–µ–≥–æ. <b>–¢–ì–ö!</b>'),
        Url(Const('–¢–ì–ö'), url=Const('https://t.me/waste3dinfo'), id = 'next_data_eng'),
        Button(Const('‚óÄÔ∏è –ù–∞–∑–∞–¥'), id = 'python_dataeng_next_4', on_click=python_go_back),
        Button(Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'python_dataeng_4_menu', on_click=learning_button_started),
        state=PythonDataEngDialogSG.window_4
    ),
)

plusses_learn_dialog = Dialog(
    Window(
        Const('<b>–ø–µ—Ä–≤—ã–π</b>'),
        Button(Const('–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è'), id='b_next', on_click=python_go_next),
        Button(text=Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'back_in_menu_pls_1', on_click=learning_button_started),
        state = PlusesLearningDialogSG.window_1
    )

)

golang_learn_dialog = Dialog(
    Window(
        Const('<b>–ø–µ—Ä–≤—ã–π</b>'),
        Button(Const('–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è'), id='b_next', on_click=python_go_next),
        Button(text=Const('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é'), id = 'go_in_menu_1', on_click=learning_button_started),
        state = GolangLearningDialogSG.window_1
    )
)

@router.message(CommandStart())
async def start_proccess_command(message:Message, dialog_manager:DialogManager):
    await dialog_manager.start(state=StartSG.start, mode = StartMode.RESET_STACK)

dp.include_router(router)
dp.include_routers(start_dialog, second_dialog, learning_dialog, python_learn_dialog, golang_learn_dialog, plusses_learn_dialog, python_backend_dialog, python_data_eng_dialog, python_data_science_dialog)
setup_dialogs(dp)
dp.run_polling(bot)